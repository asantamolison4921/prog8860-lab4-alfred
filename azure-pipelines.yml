trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  solution: 'Prog8860Lab4/Prog8860Lab4.sln'
  artifactName: 'drop'
  artifactPath: '$(Build.ArtifactStagingDirectory)/build_output.zip'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build Job'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.0.x'
    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: '$(solution)'
    - script: |
        dotnet build $(solution) --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)
      displayName: 'Build Project'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(artifactPath)'
        replaceExistingArchive: true
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: '$(artifactName)'
        publishLocation: 'Container'

- stage: Test
  displayName: 'Test Stage'
  dependsOn: Build
  jobs:
  - job: Test
    displayName: 'Run Unit Tests'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.0.x'
    - script: |
        dotnet test $(solution) --configuration $(buildConfiguration)
      displayName: 'Run Tests'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Test
  jobs:
  - job: Deploy
    displayName: 'Deploy to Azure'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.0.x'
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: '$(artifactName)'
        downloadPath: '$(System.ArtifactsDirectory)'
    - script: |
        if exist "$(System.ArtifactsDirectory)\$(artifactName)\build_output.zip" (
          echo The file build_output.zip exists in the directory.
        ) else (
          echo The file build_output.zip does not exist in the directory.
        )
      displayName: 'Check if build_output.zip exists'
    - task: AzureFunctionApp@1
      inputs:
        azureSubscription: 'prog8860-service-connection'
        appType: 'functionApp'
        appName: 'prog8860-lab4-app'
        package: '$(System.ArtifactsDirectory)\$(artifactName)\build_output.zip'